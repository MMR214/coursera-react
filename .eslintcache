[{"D:\\coursera\\coursera-react\\src\\index.js":"1","D:\\coursera\\coursera-react\\src\\components\\MenuComponent.js":"2","D:\\coursera\\coursera-react\\src\\App.js":"3","D:\\coursera\\coursera-react\\src\\shared\\dishes.js":"4","D:\\coursera\\coursera-react\\src\\components\\DishdetailComponent.js":"5","D:\\coursera\\coursera-react\\src\\components\\DishDetailComponent.js":"6","D:\\coursera\\coursera-react\\src\\reportWebVitals.js":"7","D:\\coursera\\coursera-react\\src\\components\\MainComponent.js":"8","D:\\coursera\\coursera-react\\src\\components\\HeaderComponent.js":"9","D:\\coursera\\coursera-react\\src\\components\\FooterComponent.js":"10","D:\\coursera\\coursera-react\\src\\components\\HomeComponent.js":"11","D:\\coursera\\coursera-react\\src\\components\\ContactComponent.js":"12","D:\\coursera\\coursera-react\\src\\shared\\leaders.js":"13","D:\\coursera\\coursera-react\\src\\shared\\comments.js":"14","D:\\coursera\\coursera-react\\src\\components\\AboutComponent.js":"15"},{"size":643,"mtime":1611584281633,"results":"16","hashOfConfig":"17"},{"size":1488,"mtime":1612196019918,"results":"18","hashOfConfig":"17"},{"size":359,"mtime":1611591399109,"results":"19","hashOfConfig":"17"},{"size":1448,"mtime":1611851961962,"results":"20","hashOfConfig":"17"},{"size":1436,"mtime":1609593151726,"results":"21","hashOfConfig":"17"},{"size":2646,"mtime":1612119406517,"results":"22","hashOfConfig":"17"},{"size":362,"mtime":1609352550470,"results":"23","hashOfConfig":"17"},{"size":2054,"mtime":1612202149368,"results":"24","hashOfConfig":"17"},{"size":2562,"mtime":1611771812904,"results":"25","hashOfConfig":"17"},{"size":2988,"mtime":1611686035765,"results":"26","hashOfConfig":"17"},{"size":1111,"mtime":1611853287456,"results":"27","hashOfConfig":"17"},{"size":11071,"mtime":1612459610678,"results":"28","hashOfConfig":"17"},{"size":2382,"mtime":1611852229585,"results":"29","hashOfConfig":"17"},{"size":4280,"mtime":1611852214087,"results":"30","hashOfConfig":"17"},{"size":4313,"mtime":1612203492339,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"skeejc",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\coursera\\coursera-react\\src\\index.js",[],"D:\\coursera\\coursera-react\\src\\components\\MenuComponent.js",[],"D:\\coursera\\coursera-react\\src\\App.js",[],"D:\\coursera\\coursera-react\\src\\shared\\dishes.js",[],"D:\\coursera\\coursera-react\\src\\components\\DishdetailComponent.js",["63"],"D:\\coursera\\coursera-react\\src\\components\\DishDetailComponent.js",[],"D:\\coursera\\coursera-react\\src\\reportWebVitals.js",[],"D:\\coursera\\coursera-react\\src\\components\\MainComponent.js",[],"D:\\coursera\\coursera-react\\src\\components\\HeaderComponent.js",[],"D:\\coursera\\coursera-react\\src\\components\\FooterComponent.js",[],"D:\\coursera\\coursera-react\\src\\components\\HomeComponent.js",[],"D:\\coursera\\coursera-react\\src\\components\\ContactComponent.js",["64"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem , Button, Form, FormGroup, Label, Input, Col , Row, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum:'',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false  \r\n            }\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this); \r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type  === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(\"Current State is: \" + JSON.stringify(this.state));\r\n        alert(\"Current State is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: {...this.state.touched, [field]: true}\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email){\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum:'',\r\n            email: '',\r\n        };\r\n\r\n        if(this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if(this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if(this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if(this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n        \r\n        const reg = /^\\d+$/;\r\n        if(this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x ==='@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n    \r\n    render() {  \r\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"''\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <diva className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstname}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onBlur={this.handleBlur('firstname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                        <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastname}\r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur={this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                        <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Telephone Number\"\r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur={this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange} />\r\n                                        <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"email\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                        <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <FormGroup check>\r\n                                       <Label check>\r\n                                            <Input type=\"checkbox\" name=\"agree\"\r\n                                                checked={this.state.agree} \r\n                                                onChange={this.handleInputChange} /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label> \r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                        value={this.state.contactType}\r\n                                        onChange={this.handleInputChange}\r\n                                         >\r\n                                            <option>Tel</option>\r\n                                            <option>email</option>\r\n                                        </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message} \r\n                                        onChange={this.handleInputChange}\r\n                                        />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </diva>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","D:\\coursera\\coursera-react\\src\\shared\\leaders.js",[],"D:\\coursera\\coursera-react\\src\\shared\\comments.js",[],"D:\\coursera\\coursera-react\\src\\components\\AboutComponent.js",[],{"ruleId":"65","severity":1,"message":"66","line":2,"column":25,"nodeType":"67","messageId":"68","endLine":2,"endColumn":39},{"ruleId":"65","severity":1,"message":"69","line":2,"column":84,"nodeType":"67","messageId":"68","endLine":2,"endColumn":87},"no-unused-vars","'CardImgOverlay' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used."]